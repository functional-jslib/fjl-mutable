{"version":3,"file":"fjl-mutable.js","sources":["../../src/fjlMutable.js"],"sourcesContent":["/**\r\n * @module fjlMutable\r\n */\r\nimport {isUndefined, curry} from 'fjl';\r\n\r\nimport {errorIfNotType, getTypeName} from 'fjl-error-throwing';\r\n\r\n/** ============================================================= */\r\n/** Type definitions:                                             */\r\n/** ============================================================= */\r\n/**\r\n * @typedef {String|Function} TypeRef\r\n * @description Type reference.  Either actual type or type's name;  E.g., `Type.name`\r\n */\r\n\r\n/**\r\n * @typedef {*} Target\r\n */\r\n\r\n/**\r\n * @typedef {Object} Descriptor\r\n */\r\n\r\n/**\r\n * @typedef {Array<Target, Descriptor>} TargetDescriptorTuple\r\n */\r\n\r\nexport const\r\n\r\n    /**\r\n     * @function module:fjlMutable._descriptorForSettable\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @returns {Descriptor} - Property descriptor with just getter and setter.\r\n     * @private\r\n     */\r\n    _descriptorForSettable = (Type, propName, target) => {\r\n        let _value;\r\n        return {\r\n            get: function () {\r\n                return _value;\r\n            },\r\n            set: function (value) {\r\n                _value = errorIfNotTypeOnTarget(Type, propName, target, value);\r\n            }\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable._makeEnumerableDescriptor\r\n     * @param {TargetDescriptorTuple} - [target, descriptor] tuple.\r\n     * @returns {TargetDescriptorTuple} - Array of target and descriptor.\r\n     * @private\r\n     */\r\n    _makeEnumerableDescriptor = ([target, descriptor]) => {\r\n        descriptor.enumerable = true;\r\n        return [target, descriptor];\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.errorIfNotTypeOnTarget$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @param propValue {*}\r\n     * @returns {*} - `propValue`\r\n     */\r\n    errorIfNotTypeOnTarget$ = (Type, propName, target, propValue) => {\r\n        errorIfNotType(getTypeName(Type), target, propName, propValue);\r\n        return propValue;\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     */\r\n    defineProp$ = (Type, propName, [target, descriptor], defaultValue = undefined) => {\r\n        descriptor = descriptor || _descriptorForSettable(Type, propName, target);\r\n        Object.defineProperty(target, propName, descriptor);\r\n        if (!isUndefined(defaultValue)) {\r\n            target[propName] = defaultValue;\r\n        }\r\n        return [target, descriptor];\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     */\r\n    defineEnumProp$ = (Type, propName, [target, descriptor], defaultValue = undefined) =>\r\n        _makeEnumerableDescriptor (\r\n            defineProp$(Type, propName, [target, descriptor], defaultValue)\r\n        ),\r\n\r\n    /**\r\n     * @function module:fjlMutable.errorIfNotTypeOnTarget\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @param propValue {*}\r\n     * @returns {*} - `propValue`\r\n     * @curried\r\n     */\r\n    errorIfNotTypeOnTarget = curry(errorIfNotTypeOnTarget$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineProp = curry(defineProp$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumProp\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumProp = curry(defineEnumProp$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropArray\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropArray = defineProp(Array),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropBoolean\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropBoolean = defineProp(Boolean),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropFunction\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropFunction = defineProp(Function),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropNumber\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropNumber = defineProp(Number),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropString\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropString = defineProp(String),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropArray\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropArray = defineEnumProp(Array),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropBoolean\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropBoolean = defineEnumProp(Boolean),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropFunction\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropFunction = defineEnumProp(Function),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropNumber\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropNumber = defineEnumProp(Number),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropString\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropString = defineEnumProp(String)\r\n\r\n;\r\n"],"names":["_descriptorForSettable","Type","propName","target","_value","value","errorIfNotTypeOnTarget","_makeEnumerableDescriptor","descriptor","enumerable","errorIfNotTypeOnTarget$","propValue","getTypeName","defineProp$","defaultValue","undefined","defineProperty","isUndefined","defineEnumProp$","curry","defineProp","defineEnumProp","definePropArray","Array","definePropBoolean","Boolean","definePropFunction","Function","definePropNumber","Number","definePropString","String","defineEnumPropArray","defineEnumPropBoolean","defineEnumPropFunction","defineEnumPropNumber","defineEnumPropString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,AAAO,IAUHA,yBAAyB,SAAzBA,sBAAyB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,EAA4B;QAC7CC,eAAJ;WACO;aACE,kBAAY;mBACNA,MAAP;SAFD;aAIE,gBAAUC,KAAV,EAAiB;qBACTC,uBAAuBL,IAAvB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CE,KAA/C,CAAT;;KALR;CAZD;IA4BHE,4BAA4B,SAA5BA,yBAA4B,OAA0B;;QAAxBJ,MAAwB;QAAhBK,UAAgB;;eACvCC,UAAX,GAAwB,IAAxB;WACO,CAACN,MAAD,EAASK,UAAT,CAAP;CA9BD;IAyCHE,0BAA0B,SAA1BA,uBAA0B,CAACT,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,EAAyBQ,SAAzB,EAAuC;oCAC9CC,6BAAYX,IAAZ,CAAf,EAAkCE,MAAlC,EAA0CD,QAA1C,EAAoDS,SAApD;WACOA,SAAP;CA3CD;IAsDHE,cAAc,SAAdA,WAAc,CAACZ,IAAD,EAAOC,QAAP,SAAoE;;QAAlDC,MAAkD;QAA1CK,UAA0C;;QAA7BM,YAA6B,uEAAdC,SAAc;;iBACjEP,cAAcR,uBAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,MAAvC,CAA3B;WACOa,cAAP,CAAsBb,MAAtB,EAA8BD,QAA9B,EAAwCM,UAAxC;QACI,CAACS,gBAAYH,YAAZ,CAAL,EAAgC;eACrBZ,QAAP,IAAmBY,YAAnB;;WAEG,CAACX,MAAD,EAASK,UAAT,CAAP;CA5DD;IAuEHU,kBAAkB,SAAlBA,eAAkB,CAACjB,IAAD,EAAOC,QAAP;;QAAkBC,MAAlB;QAA0BK,UAA1B;;QAAuCM,YAAvC,uEAAsDC,SAAtD;WACdR,0BACIM,YAAYZ,IAAZ,EAAkBC,QAAlB,EAA4B,CAACC,MAAD,EAASK,UAAT,CAA5B,EAAkDM,YAAlD,CADJ,CADc;CAvEf;IAqFHR,yBAAyBa,UAAMT,uBAAN,CArFtB;IAgGHU,aAAaD,UAAMN,WAAN,CAhGV;IA2GHQ,iBAAiBF,UAAMD,eAAN,CA3Gd;IAqHHI,kBAAkBF,WAAWG,KAAX,CArHf;IA+HHC,oBAAoBJ,WAAWK,OAAX,CA/HjB;IAyIHC,qBAAqBN,WAAWO,QAAX,CAzIlB;IAmJHC,mBAAmBR,WAAWS,MAAX,CAnJhB;IA6JHC,mBAAmBV,WAAWW,MAAX,CA7JhB;IAuKHC,sBAAsBX,eAAeE,KAAf,CAvKnB;IAiLHU,wBAAwBZ,eAAeI,OAAf,CAjLrB;IA2LHS,yBAAyBb,eAAeM,QAAf,CA3LtB;IAqMHQ,uBAAuBd,eAAeQ,MAAf,CArMpB;IA+MHO,uBAAuBf,eAAeU,MAAf,CA/MpB;;;;;;;;;;;;;;;;;;;;;;;;;;;"}