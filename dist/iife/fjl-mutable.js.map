{"version":3,"file":"fjl-mutable.js","sources":["../../src/fjlMutable.js"],"sourcesContent":["/**\r\n * @module fjlMutable\r\n */\r\nimport {isUndefined, curry, apply} from 'fjl';\r\n\r\nimport {errorIfNotType, getTypeName} from 'fjl-error-throwing';\r\n\r\n/**\r\n * @param enumerable {Boolean}\r\n * @returns {function(*, *)|PropsDefinerCall}\r\n * @private\r\n */\r\nfunction _getDefineProps$ (enumerable) {\r\n    const op$ = enumerable ? defineEnumProp$ : defineProp$;\r\n    return (argTuples, target) => {\r\n        const targetDescriptorTupleArg = [[target]];\r\n        return argTuples.map(argTuple => {\r\n            let result;\r\n            switch (argTuple.length) {\r\n                case 2:\r\n                    result = apply(op$, argTuple.concat(targetDescriptorTupleArg));\r\n                    break;\r\n                default:\r\n                    result = apply(op$, argTuple);\r\n                    break;\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * @note Custom jsdoc type definitions defined toward end of file.\r\n */\r\nexport const\r\n\r\n    /**\r\n     * @function module:fjlMutable._descriptorForSettable\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @returns {Descriptor} - Property descriptor with just getter and setter.\r\n     * @private\r\n     */\r\n    _descriptorForSettable = (Type, propName, target) => {\r\n        let _value;\r\n        return {\r\n            get: function () {\r\n                return _value;\r\n            },\r\n            set: function (value) {\r\n                _value = errorIfNotTypeOnTarget(Type, propName, target, value);\r\n            }\r\n        };\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable._makeDescriptorEnumerable\r\n     * @param {TargetDescriptorTuple} - [target, descriptor] tuple.\r\n     * @returns {TargetDescriptorTuple} - Array of target and descriptor.\r\n     * @private\r\n     */\r\n    _makeDescriptorEnumerable = ([target, descriptor]) => {\r\n        descriptor.enumerable = true;\r\n        return [target, descriptor];\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.errorIfNotTypeOnTarget$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @param propValue {*}\r\n     * @returns {*} - `propValue`\r\n     */\r\n    errorIfNotTypeOnTarget$ = (Type, propName, target, propValue) => {\r\n        errorIfNotType(getTypeName(Type), target, propName, propValue);\r\n        return propValue;\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     */\r\n    defineProp$ = (Type, propName, [target, descriptor], defaultValue = undefined) => {\r\n        descriptor = descriptor || _descriptorForSettable(Type, propName, target);\r\n        Object.defineProperty(target, propName, descriptor);\r\n        if (!isUndefined(defaultValue)) {\r\n            target[propName] = defaultValue;\r\n        }\r\n        return [target, descriptor];\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp$\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     */\r\n    defineEnumProp$ = (Type, propName, [target, descriptor], defaultValue = undefined) => {\r\n        descriptor = descriptor || _descriptorForSettable(Type, propName, target);\r\n        return defineProp$(\r\n            Type, propName,\r\n            _makeDescriptorEnumerable([target, descriptor]),\r\n            defaultValue\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Allows you to define multiple enum props at once on target.\r\n     * @function module:fjlMutable.defineEnumProps$\r\n     * @param argsTuple {Array.<DefinePropArgsTuple>} - Array of argArrays for `defineEnumProp`.\r\n     * @param [target = undefined] {Target} - Target to use in internal calls if one is not provided but encountered 'argArray'.\r\n     * @returns {Array.<TargetDescriptorTuple>} - Results of each call to `defineEnumProp`.\r\n     */\r\n    defineEnumProps$ = _getDefineProps$(true),\r\n\r\n    /**\r\n     * Allows you to define multiple props at once on target.\r\n     * @function module:fjlMutable.defineProps$\r\n     * @param argsTuple {Array.<DefinePropArgsTuple>} - Array of argArrays for `defineProp`.\r\n     * @param [target = undefined] {Target} - Target to use in internal calls if one is not provided but encountered 'argArray'.\r\n     * @returns {Array.<TargetDescriptorTuple>} - Results of each call to `defineProp`.\r\n     */\r\n    defineProps$ = _getDefineProps$(false),\r\n\r\n    /**\r\n     * @function module:fjlMutable.errorIfNotTypeOnTarget\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param target {*}\r\n     * @param propValue {*}\r\n     * @returns {*} - `propValue`\r\n     * @curried\r\n     */\r\n    errorIfNotTypeOnTarget = curry(errorIfNotTypeOnTarget$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineProp\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineProp = curry(defineProp$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumProp\r\n     * @param Type {TypeRef} - {String|Function}\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumProp = curry(defineEnumProp$),\r\n\r\n    /**\r\n     * Same as `defineProps$` but curried:\r\n     *  Allows you to define multiple props at once on target.\r\n     * @function module:fjlMutable.defineProps\r\n     * @param argsTuple {Array.<DefinePropArgsTuple>} - Array of argArrays for `defineProp`.\r\n     * @param [target = undefined] {Target} - Target to use in internal calls if one is not provided but encountered 'argArray'.\r\n     * @returns {Array.<TargetDescriptorTuple>} - Results of each call to `defineProp`.\r\n     * @curried\r\n     */\r\n    defineProps = curry(defineProps$),\r\n\r\n    /**\r\n     * Same as `defineEnumProps$` but curried:\r\n     *  Allows you to define multiple enum props at once on target.\r\n     * @function module:fjlMutable.defineEnumProps\r\n     * @param argsTuple {Array.<DefinePropArgsTuple>} - Array of argArrays for `defineEnumProp`.\r\n     * @param [target = undefined] {Target} - Target to use in internal calls if one is not provided but encountered 'argArray'.\r\n     * @returns {Array.<TargetDescriptorTuple>} - Results of each call to `defineEnumProp`.\r\n     * @curried\r\n     */\r\n    defineEnumProps = curry(defineEnumProps$),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropArray\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropArray = defineProp(Array),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropBoolean\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropBoolean = defineProp(Boolean),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropFunction\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropFunction = defineProp(Function),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropNumber\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropNumber = defineProp(Number),\r\n\r\n    /**\r\n     * @function module:fjlMutable.definePropString\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    definePropString = defineProp(String),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropArray\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropArray = defineEnumProp(Array),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropBoolean\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropBoolean = defineEnumProp(Boolean),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropFunction\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropFunction = defineEnumProp(Function),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropNumber\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropNumber = defineEnumProp(Number),\r\n\r\n    /**\r\n     * @function module:fjlMutable.defineEnumPropString\r\n     * @param propName {String}\r\n     * @param {TargetDescriptorTuple} - [target, descriptor].\r\n     * @param [defaultValue=undefined] {*}\r\n     * @returns {TargetDescriptorTuple}\r\n     * @curried\r\n     */\r\n    defineEnumPropString = defineEnumProp(String)\r\n\r\n;\r\n\r\n/** ============================================================= */\r\n/** Type definitions:                                             */\r\n/** ============================================================= */\r\n/**\r\n * @typedef {String|Function} TypeRef\r\n * @description Type reference.  Either actual type or type's name;  E.g., `Type.name`\r\n */\r\n\r\n/**\r\n * @typedef {*} Target\r\n */\r\n\r\n/**\r\n * @typedef {Object} Descriptor\r\n */\r\n\r\n/**\r\n * @typedef {Array<Target, Descriptor>} TargetDescriptorTuple\r\n */\r\n\r\n/**\r\n * @typedef {Array.<TypeRef, String, [TargetDescriptorTuple], [*|null|undefined]>}  DefinePropArgsTuple\r\n * @description Arguments list for `defineProp` and/or `defineEnumProp`;  E.g.,\r\n *  ```\r\n *  [String, 'somePropName', [someTarget], 'someDefaultValue] // ...\r\n *  ```\r\n */\r\n\r\n/**\r\n * @typedef {Function} PropsDefinerCall\r\n * @description Same type as `defineProp` and `defineEnumProp`\r\n * @param argsTuple {DefinePropArgsTuple}\r\n * @param target {Target}\r\n * @returns {Array.<TargetDescriptorTuple>}\r\n */\r\n"],"names":["_getDefineProps$","enumerable","op$","defineEnumProp$","defineProp$","argTuples","target","targetDescriptorTupleArg","map","result","argTuple","length","apply","concat","_descriptorForSettable","Type","propName","_value","value","errorIfNotTypeOnTarget","_makeDescriptorEnumerable","descriptor","errorIfNotTypeOnTarget$","propValue","getTypeName","defaultValue","undefined","defineProperty","isUndefined","defineEnumProps$","defineProps$","curry","defineProp","defineEnumProp","defineProps","defineEnumProps","definePropArray","Array","definePropBoolean","Boolean","definePropFunction","Function","definePropNumber","Number","definePropString","String","defineEnumPropArray","defineEnumPropBoolean","defineEnumPropFunction","defineEnumPropNumber","defineEnumPropString"],"mappings":"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"}